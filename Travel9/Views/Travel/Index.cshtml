@model Travel9.ViewModels.TravelVM

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<h4>TravelVM</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DepartureCode" class="control-label"></label>
                <select class="form-control" asp-for="DepartureCode"
                        asp-items="Model.CountryList">
                    <option disabled selected value="">Select a Country</option>
                </select>
                <span asp-validation-for="DepartureCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ArrivalCode" class="control-label"></label>
                <select class="form-control" asp-for="ArrivalCode"
                        asp-items="Model.CountryList">
                    <option disabled selected value="">Select a Country</option>
                </select>
                <span asp-validation-for="ArrivalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Travel" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <span>I travel so many days.</span>
    <input type="text" id="DateResult" />
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
  
        /*window.addEventListener('load', () => {
            console.log('start')
            let startEl = document.getElementById("StartDate");
            let endEl = document.getElementById("EndDate");
            let outputTextElement = document.getElementById("DateResult");
            console.log('test1')
            endEl.addEventListener('focusout', () => {
                if (!startEl?.value)
                alert("don't forget the begindate");

                    else {
                        let days = (new Date(endEl.value) - new Date(startEl.value)) / (1000*60*60*24)
                        outputTextElement.value = days;
                    }
            })

        })*/

        /*Nu in JQuery:*/

        $(() => {
            console.log("start");

            $("#EndDate").on('focusout', () => {
                if ($('#StartDate').val() == "")
                    alert("don't forget begindate");
                else {
                    let days = (new Date($('#EndDate').val())
                        - new Date($('#StartDate').val()))
                        / (1000 * 60 * 60 * 24);
                    $("#DateResult").val(days);
                }
            })
        });
    
    </script>
}
